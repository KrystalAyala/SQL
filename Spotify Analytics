# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 


--What is the average dancability by artist and track?
SELECT  artist_name, track_name, avg(danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name

--Which artist has the most songs on the top 50?
SELECT artist_name, count(track_name) AS num_tracks
FROM BIT_DB.Spotifydata
GROUP BY artist_name 
ORDER BY num_tracks DESC
LIMIT 2
 
--Is there a correlation between loudness and popularity?
SELECT track_name,loudness, popularity
FROM BIT_DB.Spotifydata
WHERE popularity > 90
ORDER BY loudness DESC

--What is the most popular key and how many songs are in that key?
SELECT song_key, COUNT(song_key)
FROM BIT_DB.Spotifydata
GROUP BY song_key
ORDER BY COUNT(song_key) DESC
LIMIT 1

--How many artists had more than one song in the top 50 and what was their avg popularity?
SELECT artist_name, COUNT(track_name), AVG(popularity)
FROM BIT_DB.Spotifydata 
GROUP BY artist_name
HAVING COUNT(track_name) > 1

--What is the average acousticness of the top 5 artists whose track has a tempo greater than 150?
SELECT artist_name, track_name, AVG(acousticness)
FROM BIT_DB.Spotifydata 
GROUP BY track_name
HAVING tempo > 150
ORDER BY tempo DESC
LIMIT 5

--For every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.

WITH tempTable AS(
SELECT s.artist_name, AVG(s.popularity) AS avg_pop
FROM Spotifydata s
GROUP BY s.artist_name
)
SELECT artist_name, avg_pop, 'Top Star' AS tag
FROM tempTable
WHERE avg_pop >=90; 
